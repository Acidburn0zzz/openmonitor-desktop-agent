// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: maidsafe/dht/rpcs.proto

#ifndef PROTOBUF_maidsafe_2fdht_2frpcs_2eproto__INCLUDED
#define PROTOBUF_maidsafe_2fdht_2frpcs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "kademlia.pb.h"
// @@protoc_insertion_point(includes)

namespace maidsafe {
namespace dht {
namespace protobuf {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();

class SignedValue;
class PingRequest;
class PingResponse;
class FindValueRequest;
class FindValueResponse;
class FindNodesRequest;
class FindNodesResponse;
class StoreRequest;
class StoreResponse;
class StoreRefreshRequest;
class StoreRefreshResponse;
class DeleteRequest;
class DeleteResponse;
class DeleteRefreshRequest;
class DeleteRefreshResponse;
class DownlistNotification;

// ===================================================================

class SignedValue : public ::google::protobuf::Message {
 public:
  SignedValue();
  virtual ~SignedValue();
  
  SignedValue(const SignedValue& from);
  
  inline SignedValue& operator=(const SignedValue& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignedValue& default_instance();
  
  void Swap(SignedValue* other);
  
  // implements Message ----------------------------------------------
  
  SignedValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignedValue& from);
  void MergeFrom(const SignedValue& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes value = 1;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 1;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  
  // required bytes signature = 2;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 2;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const void* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.SignedValue)
 private:
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_signature();
  inline void clear_has_signature();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* value_;
  ::std::string* signature_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static SignedValue* default_instance_;
};
// -------------------------------------------------------------------

class PingRequest : public ::google::protobuf::Message {
 public:
  PingRequest();
  virtual ~PingRequest();
  
  PingRequest(const PingRequest& from);
  
  inline PingRequest& operator=(const PingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PingRequest& default_instance();
  
  void Swap(PingRequest* other);
  
  // implements Message ----------------------------------------------
  
  PingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingRequest& from);
  void MergeFrom(const PingRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .maidsafe.dht.protobuf.Contact sender = 1;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 1;
  inline const ::maidsafe::dht::protobuf::Contact& sender() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_sender();
  inline ::maidsafe::dht::protobuf::Contact* release_sender();
  
  // required bytes ping = 2;
  inline bool has_ping() const;
  inline void clear_ping();
  static const int kPingFieldNumber = 2;
  inline const ::std::string& ping() const;
  inline void set_ping(const ::std::string& value);
  inline void set_ping(const char* value);
  inline void set_ping(const void* value, size_t size);
  inline ::std::string* mutable_ping();
  inline ::std::string* release_ping();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.PingRequest)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_ping();
  inline void clear_has_ping();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::maidsafe::dht::protobuf::Contact* sender_;
  ::std::string* ping_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static PingRequest* default_instance_;
};
// -------------------------------------------------------------------

class PingResponse : public ::google::protobuf::Message {
 public:
  PingResponse();
  virtual ~PingResponse();
  
  PingResponse(const PingResponse& from);
  
  inline PingResponse& operator=(const PingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PingResponse& default_instance();
  
  void Swap(PingResponse* other);
  
  // implements Message ----------------------------------------------
  
  PingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PingResponse& from);
  void MergeFrom(const PingResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bytes echo = 1;
  inline bool has_echo() const;
  inline void clear_echo();
  static const int kEchoFieldNumber = 1;
  inline const ::std::string& echo() const;
  inline void set_echo(const ::std::string& value);
  inline void set_echo(const char* value);
  inline void set_echo(const void* value, size_t size);
  inline ::std::string* mutable_echo();
  inline ::std::string* release_echo();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.PingResponse)
 private:
  inline void set_has_echo();
  inline void clear_has_echo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* echo_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static PingResponse* default_instance_;
};
// -------------------------------------------------------------------

class FindValueRequest : public ::google::protobuf::Message {
 public:
  FindValueRequest();
  virtual ~FindValueRequest();
  
  FindValueRequest(const FindValueRequest& from);
  
  inline FindValueRequest& operator=(const FindValueRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindValueRequest& default_instance();
  
  void Swap(FindValueRequest* other);
  
  // implements Message ----------------------------------------------
  
  FindValueRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindValueRequest& from);
  void MergeFrom(const FindValueRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .maidsafe.dht.protobuf.Contact sender = 1;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 1;
  inline const ::maidsafe::dht::protobuf::Contact& sender() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_sender();
  inline ::maidsafe::dht::protobuf::Contact* release_sender();
  
  // required bytes key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // optional int32 num_nodes_requested = 3;
  inline bool has_num_nodes_requested() const;
  inline void clear_num_nodes_requested();
  static const int kNumNodesRequestedFieldNumber = 3;
  inline ::google::protobuf::int32 num_nodes_requested() const;
  inline void set_num_nodes_requested(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.FindValueRequest)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_num_nodes_requested();
  inline void clear_has_num_nodes_requested();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::maidsafe::dht::protobuf::Contact* sender_;
  ::std::string* key_;
  ::google::protobuf::int32 num_nodes_requested_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static FindValueRequest* default_instance_;
};
// -------------------------------------------------------------------

class FindValueResponse : public ::google::protobuf::Message {
 public:
  FindValueResponse();
  virtual ~FindValueResponse();
  
  FindValueResponse(const FindValueResponse& from);
  
  inline FindValueResponse& operator=(const FindValueResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindValueResponse& default_instance();
  
  void Swap(FindValueResponse* other);
  
  // implements Message ----------------------------------------------
  
  FindValueResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindValueResponse& from);
  void MergeFrom(const FindValueResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);
  
  // repeated .maidsafe.dht.protobuf.Contact closest_nodes = 2;
  inline int closest_nodes_size() const;
  inline void clear_closest_nodes();
  static const int kClosestNodesFieldNumber = 2;
  inline const ::maidsafe::dht::protobuf::Contact& closest_nodes(int index) const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_closest_nodes(int index);
  inline ::maidsafe::dht::protobuf::Contact* add_closest_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact >&
      closest_nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact >*
      mutable_closest_nodes();
  
  // repeated .maidsafe.dht.protobuf.SignedValue signed_values = 3;
  inline int signed_values_size() const;
  inline void clear_signed_values();
  static const int kSignedValuesFieldNumber = 3;
  inline const ::maidsafe::dht::protobuf::SignedValue& signed_values(int index) const;
  inline ::maidsafe::dht::protobuf::SignedValue* mutable_signed_values(int index);
  inline ::maidsafe::dht::protobuf::SignedValue* add_signed_values();
  inline const ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::SignedValue >&
      signed_values() const;
  inline ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::SignedValue >*
      mutable_signed_values();
  
  // optional .maidsafe.dht.protobuf.Contact cached_copy_holder = 4;
  inline bool has_cached_copy_holder() const;
  inline void clear_cached_copy_holder();
  static const int kCachedCopyHolderFieldNumber = 4;
  inline const ::maidsafe::dht::protobuf::Contact& cached_copy_holder() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_cached_copy_holder();
  inline ::maidsafe::dht::protobuf::Contact* release_cached_copy_holder();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.FindValueResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_cached_copy_holder();
  inline void clear_has_cached_copy_holder();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact > closest_nodes_;
  ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::SignedValue > signed_values_;
  ::maidsafe::dht::protobuf::Contact* cached_copy_holder_;
  bool result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static FindValueResponse* default_instance_;
};
// -------------------------------------------------------------------

class FindNodesRequest : public ::google::protobuf::Message {
 public:
  FindNodesRequest();
  virtual ~FindNodesRequest();
  
  FindNodesRequest(const FindNodesRequest& from);
  
  inline FindNodesRequest& operator=(const FindNodesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindNodesRequest& default_instance();
  
  void Swap(FindNodesRequest* other);
  
  // implements Message ----------------------------------------------
  
  FindNodesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindNodesRequest& from);
  void MergeFrom(const FindNodesRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .maidsafe.dht.protobuf.Contact sender = 1;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 1;
  inline const ::maidsafe::dht::protobuf::Contact& sender() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_sender();
  inline ::maidsafe::dht::protobuf::Contact* release_sender();
  
  // required bytes key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // optional int32 num_nodes_requested = 3;
  inline bool has_num_nodes_requested() const;
  inline void clear_num_nodes_requested();
  static const int kNumNodesRequestedFieldNumber = 3;
  inline ::google::protobuf::int32 num_nodes_requested() const;
  inline void set_num_nodes_requested(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.FindNodesRequest)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_num_nodes_requested();
  inline void clear_has_num_nodes_requested();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::maidsafe::dht::protobuf::Contact* sender_;
  ::std::string* key_;
  ::google::protobuf::int32 num_nodes_requested_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static FindNodesRequest* default_instance_;
};
// -------------------------------------------------------------------

class FindNodesResponse : public ::google::protobuf::Message {
 public:
  FindNodesResponse();
  virtual ~FindNodesResponse();
  
  FindNodesResponse(const FindNodesResponse& from);
  
  inline FindNodesResponse& operator=(const FindNodesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FindNodesResponse& default_instance();
  
  void Swap(FindNodesResponse* other);
  
  // implements Message ----------------------------------------------
  
  FindNodesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FindNodesResponse& from);
  void MergeFrom(const FindNodesResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);
  
  // repeated .maidsafe.dht.protobuf.Contact closest_nodes = 2;
  inline int closest_nodes_size() const;
  inline void clear_closest_nodes();
  static const int kClosestNodesFieldNumber = 2;
  inline const ::maidsafe::dht::protobuf::Contact& closest_nodes(int index) const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_closest_nodes(int index);
  inline ::maidsafe::dht::protobuf::Contact* add_closest_nodes();
  inline const ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact >&
      closest_nodes() const;
  inline ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact >*
      mutable_closest_nodes();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.FindNodesResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact > closest_nodes_;
  bool result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static FindNodesResponse* default_instance_;
};
// -------------------------------------------------------------------

class StoreRequest : public ::google::protobuf::Message {
 public:
  StoreRequest();
  virtual ~StoreRequest();
  
  StoreRequest(const StoreRequest& from);
  
  inline StoreRequest& operator=(const StoreRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreRequest& default_instance();
  
  void Swap(StoreRequest* other);
  
  // implements Message ----------------------------------------------
  
  StoreRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreRequest& from);
  void MergeFrom(const StoreRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .maidsafe.dht.protobuf.Contact sender = 1;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 1;
  inline const ::maidsafe::dht::protobuf::Contact& sender() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_sender();
  inline ::maidsafe::dht::protobuf::Contact* release_sender();
  
  // required bytes key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // required .maidsafe.dht.protobuf.SignedValue signed_value = 3;
  inline bool has_signed_value() const;
  inline void clear_signed_value();
  static const int kSignedValueFieldNumber = 3;
  inline const ::maidsafe::dht::protobuf::SignedValue& signed_value() const;
  inline ::maidsafe::dht::protobuf::SignedValue* mutable_signed_value();
  inline ::maidsafe::dht::protobuf::SignedValue* release_signed_value();
  
  // required int32 ttl = 4;
  inline bool has_ttl() const;
  inline void clear_ttl();
  static const int kTtlFieldNumber = 4;
  inline ::google::protobuf::int32 ttl() const;
  inline void set_ttl(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.StoreRequest)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_signed_value();
  inline void clear_has_signed_value();
  inline void set_has_ttl();
  inline void clear_has_ttl();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::maidsafe::dht::protobuf::Contact* sender_;
  ::std::string* key_;
  ::maidsafe::dht::protobuf::SignedValue* signed_value_;
  ::google::protobuf::int32 ttl_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static StoreRequest* default_instance_;
};
// -------------------------------------------------------------------

class StoreResponse : public ::google::protobuf::Message {
 public:
  StoreResponse();
  virtual ~StoreResponse();
  
  StoreResponse(const StoreResponse& from);
  
  inline StoreResponse& operator=(const StoreResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreResponse& default_instance();
  
  void Swap(StoreResponse* other);
  
  // implements Message ----------------------------------------------
  
  StoreResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreResponse& from);
  void MergeFrom(const StoreResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.StoreResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static StoreResponse* default_instance_;
};
// -------------------------------------------------------------------

class StoreRefreshRequest : public ::google::protobuf::Message {
 public:
  StoreRefreshRequest();
  virtual ~StoreRefreshRequest();
  
  StoreRefreshRequest(const StoreRefreshRequest& from);
  
  inline StoreRefreshRequest& operator=(const StoreRefreshRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreRefreshRequest& default_instance();
  
  void Swap(StoreRefreshRequest* other);
  
  // implements Message ----------------------------------------------
  
  StoreRefreshRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreRefreshRequest& from);
  void MergeFrom(const StoreRefreshRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .maidsafe.dht.protobuf.Contact sender = 1;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 1;
  inline const ::maidsafe::dht::protobuf::Contact& sender() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_sender();
  inline ::maidsafe::dht::protobuf::Contact* release_sender();
  
  // optional bytes serialised_store_request = 2;
  inline bool has_serialised_store_request() const;
  inline void clear_serialised_store_request();
  static const int kSerialisedStoreRequestFieldNumber = 2;
  inline const ::std::string& serialised_store_request() const;
  inline void set_serialised_store_request(const ::std::string& value);
  inline void set_serialised_store_request(const char* value);
  inline void set_serialised_store_request(const void* value, size_t size);
  inline ::std::string* mutable_serialised_store_request();
  inline ::std::string* release_serialised_store_request();
  
  // optional bytes serialised_store_request_signature = 3;
  inline bool has_serialised_store_request_signature() const;
  inline void clear_serialised_store_request_signature();
  static const int kSerialisedStoreRequestSignatureFieldNumber = 3;
  inline const ::std::string& serialised_store_request_signature() const;
  inline void set_serialised_store_request_signature(const ::std::string& value);
  inline void set_serialised_store_request_signature(const char* value);
  inline void set_serialised_store_request_signature(const void* value, size_t size);
  inline ::std::string* mutable_serialised_store_request_signature();
  inline ::std::string* release_serialised_store_request_signature();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.StoreRefreshRequest)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_serialised_store_request();
  inline void clear_has_serialised_store_request();
  inline void set_has_serialised_store_request_signature();
  inline void clear_has_serialised_store_request_signature();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::maidsafe::dht::protobuf::Contact* sender_;
  ::std::string* serialised_store_request_;
  ::std::string* serialised_store_request_signature_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static StoreRefreshRequest* default_instance_;
};
// -------------------------------------------------------------------

class StoreRefreshResponse : public ::google::protobuf::Message {
 public:
  StoreRefreshResponse();
  virtual ~StoreRefreshResponse();
  
  StoreRefreshResponse(const StoreRefreshResponse& from);
  
  inline StoreRefreshResponse& operator=(const StoreRefreshResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreRefreshResponse& default_instance();
  
  void Swap(StoreRefreshResponse* other);
  
  // implements Message ----------------------------------------------
  
  StoreRefreshResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreRefreshResponse& from);
  void MergeFrom(const StoreRefreshResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.StoreRefreshResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static StoreRefreshResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRequest : public ::google::protobuf::Message {
 public:
  DeleteRequest();
  virtual ~DeleteRequest();
  
  DeleteRequest(const DeleteRequest& from);
  
  inline DeleteRequest& operator=(const DeleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRequest& default_instance();
  
  void Swap(DeleteRequest* other);
  
  // implements Message ----------------------------------------------
  
  DeleteRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRequest& from);
  void MergeFrom(const DeleteRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .maidsafe.dht.protobuf.Contact sender = 1;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 1;
  inline const ::maidsafe::dht::protobuf::Contact& sender() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_sender();
  inline ::maidsafe::dht::protobuf::Contact* release_sender();
  
  // required bytes key = 2;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 2;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const void* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  
  // required .maidsafe.dht.protobuf.SignedValue signed_value = 3;
  inline bool has_signed_value() const;
  inline void clear_signed_value();
  static const int kSignedValueFieldNumber = 3;
  inline const ::maidsafe::dht::protobuf::SignedValue& signed_value() const;
  inline ::maidsafe::dht::protobuf::SignedValue* mutable_signed_value();
  inline ::maidsafe::dht::protobuf::SignedValue* release_signed_value();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.DeleteRequest)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_signed_value();
  inline void clear_has_signed_value();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::maidsafe::dht::protobuf::Contact* sender_;
  ::std::string* key_;
  ::maidsafe::dht::protobuf::SignedValue* signed_value_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteResponse : public ::google::protobuf::Message {
 public:
  DeleteResponse();
  virtual ~DeleteResponse();
  
  DeleteResponse(const DeleteResponse& from);
  
  inline DeleteResponse& operator=(const DeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteResponse& default_instance();
  
  void Swap(DeleteResponse* other);
  
  // implements Message ----------------------------------------------
  
  DeleteResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteResponse& from);
  void MergeFrom(const DeleteResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.DeleteResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRefreshRequest : public ::google::protobuf::Message {
 public:
  DeleteRefreshRequest();
  virtual ~DeleteRefreshRequest();
  
  DeleteRefreshRequest(const DeleteRefreshRequest& from);
  
  inline DeleteRefreshRequest& operator=(const DeleteRefreshRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRefreshRequest& default_instance();
  
  void Swap(DeleteRefreshRequest* other);
  
  // implements Message ----------------------------------------------
  
  DeleteRefreshRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRefreshRequest& from);
  void MergeFrom(const DeleteRefreshRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .maidsafe.dht.protobuf.Contact sender = 1;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 1;
  inline const ::maidsafe::dht::protobuf::Contact& sender() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_sender();
  inline ::maidsafe::dht::protobuf::Contact* release_sender();
  
  // optional bytes serialised_delete_request = 2;
  inline bool has_serialised_delete_request() const;
  inline void clear_serialised_delete_request();
  static const int kSerialisedDeleteRequestFieldNumber = 2;
  inline const ::std::string& serialised_delete_request() const;
  inline void set_serialised_delete_request(const ::std::string& value);
  inline void set_serialised_delete_request(const char* value);
  inline void set_serialised_delete_request(const void* value, size_t size);
  inline ::std::string* mutable_serialised_delete_request();
  inline ::std::string* release_serialised_delete_request();
  
  // optional bytes serialised_delete_request_signature = 3;
  inline bool has_serialised_delete_request_signature() const;
  inline void clear_serialised_delete_request_signature();
  static const int kSerialisedDeleteRequestSignatureFieldNumber = 3;
  inline const ::std::string& serialised_delete_request_signature() const;
  inline void set_serialised_delete_request_signature(const ::std::string& value);
  inline void set_serialised_delete_request_signature(const char* value);
  inline void set_serialised_delete_request_signature(const void* value, size_t size);
  inline ::std::string* mutable_serialised_delete_request_signature();
  inline ::std::string* release_serialised_delete_request_signature();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.DeleteRefreshRequest)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  inline void set_has_serialised_delete_request();
  inline void clear_has_serialised_delete_request();
  inline void set_has_serialised_delete_request_signature();
  inline void clear_has_serialised_delete_request_signature();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::maidsafe::dht::protobuf::Contact* sender_;
  ::std::string* serialised_delete_request_;
  ::std::string* serialised_delete_request_signature_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteRefreshRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteRefreshResponse : public ::google::protobuf::Message {
 public:
  DeleteRefreshResponse();
  virtual ~DeleteRefreshResponse();
  
  DeleteRefreshResponse(const DeleteRefreshResponse& from);
  
  inline DeleteRefreshResponse& operator=(const DeleteRefreshResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteRefreshResponse& default_instance();
  
  void Swap(DeleteRefreshResponse* other);
  
  // implements Message ----------------------------------------------
  
  DeleteRefreshResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteRefreshResponse& from);
  void MergeFrom(const DeleteRefreshResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required bool result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline bool result() const;
  inline void set_result(bool value);
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.DeleteRefreshResponse)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  bool result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static DeleteRefreshResponse* default_instance_;
};
// -------------------------------------------------------------------

class DownlistNotification : public ::google::protobuf::Message {
 public:
  DownlistNotification();
  virtual ~DownlistNotification();
  
  DownlistNotification(const DownlistNotification& from);
  
  inline DownlistNotification& operator=(const DownlistNotification& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DownlistNotification& default_instance();
  
  void Swap(DownlistNotification* other);
  
  // implements Message ----------------------------------------------
  
  DownlistNotification* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DownlistNotification& from);
  void MergeFrom(const DownlistNotification& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .maidsafe.dht.protobuf.Contact sender = 1;
  inline bool has_sender() const;
  inline void clear_sender();
  static const int kSenderFieldNumber = 1;
  inline const ::maidsafe::dht::protobuf::Contact& sender() const;
  inline ::maidsafe::dht::protobuf::Contact* mutable_sender();
  inline ::maidsafe::dht::protobuf::Contact* release_sender();
  
  // repeated bytes node_ids = 2;
  inline int node_ids_size() const;
  inline void clear_node_ids();
  static const int kNodeIdsFieldNumber = 2;
  inline const ::std::string& node_ids(int index) const;
  inline ::std::string* mutable_node_ids(int index);
  inline void set_node_ids(int index, const ::std::string& value);
  inline void set_node_ids(int index, const char* value);
  inline void set_node_ids(int index, const void* value, size_t size);
  inline ::std::string* add_node_ids();
  inline void add_node_ids(const ::std::string& value);
  inline void add_node_ids(const char* value);
  inline void add_node_ids(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& node_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_node_ids();
  
  // @@protoc_insertion_point(class_scope:maidsafe.dht.protobuf.DownlistNotification)
 private:
  inline void set_has_sender();
  inline void clear_has_sender();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::maidsafe::dht::protobuf::Contact* sender_;
  ::google::protobuf::RepeatedPtrField< ::std::string> node_ids_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_AssignDesc_maidsafe_2fdht_2frpcs_2eproto();
  friend void protobuf_ShutdownFile_maidsafe_2fdht_2frpcs_2eproto();
  
  void InitAsDefaultInstance();
  static DownlistNotification* default_instance_;
};
// ===================================================================


// ===================================================================

// SignedValue

// required bytes value = 1;
inline bool SignedValue::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SignedValue::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SignedValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SignedValue::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& SignedValue::value() const {
  return *value_;
}
inline void SignedValue::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SignedValue::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void SignedValue::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SignedValue::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* SignedValue::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bytes signature = 2;
inline bool SignedValue::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SignedValue::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SignedValue::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SignedValue::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& SignedValue::signature() const {
  return *signature_;
}
inline void SignedValue::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void SignedValue::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void SignedValue::set_signature(const void* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SignedValue::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* SignedValue::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PingRequest

// required .maidsafe.dht.protobuf.Contact sender = 1;
inline bool PingRequest::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingRequest::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingRequest::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingRequest::clear_sender() {
  if (sender_ != NULL) sender_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_sender();
}
inline const ::maidsafe::dht::protobuf::Contact& PingRequest::sender() const {
  return sender_ != NULL ? *sender_ : *default_instance_->sender_;
}
inline ::maidsafe::dht::protobuf::Contact* PingRequest::mutable_sender() {
  set_has_sender();
  if (sender_ == NULL) sender_ = new ::maidsafe::dht::protobuf::Contact;
  return sender_;
}
inline ::maidsafe::dht::protobuf::Contact* PingRequest::release_sender() {
  clear_has_sender();
  ::maidsafe::dht::protobuf::Contact* temp = sender_;
  sender_ = NULL;
  return temp;
}

// required bytes ping = 2;
inline bool PingRequest::has_ping() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PingRequest::set_has_ping() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PingRequest::clear_has_ping() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PingRequest::clear_ping() {
  if (ping_ != &::google::protobuf::internal::kEmptyString) {
    ping_->clear();
  }
  clear_has_ping();
}
inline const ::std::string& PingRequest::ping() const {
  return *ping_;
}
inline void PingRequest::set_ping(const ::std::string& value) {
  set_has_ping();
  if (ping_ == &::google::protobuf::internal::kEmptyString) {
    ping_ = new ::std::string;
  }
  ping_->assign(value);
}
inline void PingRequest::set_ping(const char* value) {
  set_has_ping();
  if (ping_ == &::google::protobuf::internal::kEmptyString) {
    ping_ = new ::std::string;
  }
  ping_->assign(value);
}
inline void PingRequest::set_ping(const void* value, size_t size) {
  set_has_ping();
  if (ping_ == &::google::protobuf::internal::kEmptyString) {
    ping_ = new ::std::string;
  }
  ping_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PingRequest::mutable_ping() {
  set_has_ping();
  if (ping_ == &::google::protobuf::internal::kEmptyString) {
    ping_ = new ::std::string;
  }
  return ping_;
}
inline ::std::string* PingRequest::release_ping() {
  clear_has_ping();
  if (ping_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ping_;
    ping_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// PingResponse

// required bytes echo = 1;
inline bool PingResponse::has_echo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PingResponse::set_has_echo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PingResponse::clear_has_echo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PingResponse::clear_echo() {
  if (echo_ != &::google::protobuf::internal::kEmptyString) {
    echo_->clear();
  }
  clear_has_echo();
}
inline const ::std::string& PingResponse::echo() const {
  return *echo_;
}
inline void PingResponse::set_echo(const ::std::string& value) {
  set_has_echo();
  if (echo_ == &::google::protobuf::internal::kEmptyString) {
    echo_ = new ::std::string;
  }
  echo_->assign(value);
}
inline void PingResponse::set_echo(const char* value) {
  set_has_echo();
  if (echo_ == &::google::protobuf::internal::kEmptyString) {
    echo_ = new ::std::string;
  }
  echo_->assign(value);
}
inline void PingResponse::set_echo(const void* value, size_t size) {
  set_has_echo();
  if (echo_ == &::google::protobuf::internal::kEmptyString) {
    echo_ = new ::std::string;
  }
  echo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PingResponse::mutable_echo() {
  set_has_echo();
  if (echo_ == &::google::protobuf::internal::kEmptyString) {
    echo_ = new ::std::string;
  }
  return echo_;
}
inline ::std::string* PingResponse::release_echo() {
  clear_has_echo();
  if (echo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = echo_;
    echo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// FindValueRequest

// required .maidsafe.dht.protobuf.Contact sender = 1;
inline bool FindValueRequest::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindValueRequest::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindValueRequest::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindValueRequest::clear_sender() {
  if (sender_ != NULL) sender_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_sender();
}
inline const ::maidsafe::dht::protobuf::Contact& FindValueRequest::sender() const {
  return sender_ != NULL ? *sender_ : *default_instance_->sender_;
}
inline ::maidsafe::dht::protobuf::Contact* FindValueRequest::mutable_sender() {
  set_has_sender();
  if (sender_ == NULL) sender_ = new ::maidsafe::dht::protobuf::Contact;
  return sender_;
}
inline ::maidsafe::dht::protobuf::Contact* FindValueRequest::release_sender() {
  clear_has_sender();
  ::maidsafe::dht::protobuf::Contact* temp = sender_;
  sender_ = NULL;
  return temp;
}

// required bytes key = 2;
inline bool FindValueRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindValueRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindValueRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindValueRequest::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& FindValueRequest::key() const {
  return *key_;
}
inline void FindValueRequest::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void FindValueRequest::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void FindValueRequest::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FindValueRequest::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* FindValueRequest::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 num_nodes_requested = 3;
inline bool FindValueRequest::has_num_nodes_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindValueRequest::set_has_num_nodes_requested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindValueRequest::clear_has_num_nodes_requested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindValueRequest::clear_num_nodes_requested() {
  num_nodes_requested_ = 0;
  clear_has_num_nodes_requested();
}
inline ::google::protobuf::int32 FindValueRequest::num_nodes_requested() const {
  return num_nodes_requested_;
}
inline void FindValueRequest::set_num_nodes_requested(::google::protobuf::int32 value) {
  set_has_num_nodes_requested();
  num_nodes_requested_ = value;
}

// -------------------------------------------------------------------

// FindValueResponse

// required bool result = 1;
inline bool FindValueResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindValueResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindValueResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindValueResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool FindValueResponse::result() const {
  return result_;
}
inline void FindValueResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
}

// repeated .maidsafe.dht.protobuf.Contact closest_nodes = 2;
inline int FindValueResponse::closest_nodes_size() const {
  return closest_nodes_.size();
}
inline void FindValueResponse::clear_closest_nodes() {
  closest_nodes_.Clear();
}
inline const ::maidsafe::dht::protobuf::Contact& FindValueResponse::closest_nodes(int index) const {
  return closest_nodes_.Get(index);
}
inline ::maidsafe::dht::protobuf::Contact* FindValueResponse::mutable_closest_nodes(int index) {
  return closest_nodes_.Mutable(index);
}
inline ::maidsafe::dht::protobuf::Contact* FindValueResponse::add_closest_nodes() {
  return closest_nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact >&
FindValueResponse::closest_nodes() const {
  return closest_nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact >*
FindValueResponse::mutable_closest_nodes() {
  return &closest_nodes_;
}

// repeated .maidsafe.dht.protobuf.SignedValue signed_values = 3;
inline int FindValueResponse::signed_values_size() const {
  return signed_values_.size();
}
inline void FindValueResponse::clear_signed_values() {
  signed_values_.Clear();
}
inline const ::maidsafe::dht::protobuf::SignedValue& FindValueResponse::signed_values(int index) const {
  return signed_values_.Get(index);
}
inline ::maidsafe::dht::protobuf::SignedValue* FindValueResponse::mutable_signed_values(int index) {
  return signed_values_.Mutable(index);
}
inline ::maidsafe::dht::protobuf::SignedValue* FindValueResponse::add_signed_values() {
  return signed_values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::SignedValue >&
FindValueResponse::signed_values() const {
  return signed_values_;
}
inline ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::SignedValue >*
FindValueResponse::mutable_signed_values() {
  return &signed_values_;
}

// optional .maidsafe.dht.protobuf.Contact cached_copy_holder = 4;
inline bool FindValueResponse::has_cached_copy_holder() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FindValueResponse::set_has_cached_copy_holder() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FindValueResponse::clear_has_cached_copy_holder() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FindValueResponse::clear_cached_copy_holder() {
  if (cached_copy_holder_ != NULL) cached_copy_holder_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_cached_copy_holder();
}
inline const ::maidsafe::dht::protobuf::Contact& FindValueResponse::cached_copy_holder() const {
  return cached_copy_holder_ != NULL ? *cached_copy_holder_ : *default_instance_->cached_copy_holder_;
}
inline ::maidsafe::dht::protobuf::Contact* FindValueResponse::mutable_cached_copy_holder() {
  set_has_cached_copy_holder();
  if (cached_copy_holder_ == NULL) cached_copy_holder_ = new ::maidsafe::dht::protobuf::Contact;
  return cached_copy_holder_;
}
inline ::maidsafe::dht::protobuf::Contact* FindValueResponse::release_cached_copy_holder() {
  clear_has_cached_copy_holder();
  ::maidsafe::dht::protobuf::Contact* temp = cached_copy_holder_;
  cached_copy_holder_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// FindNodesRequest

// required .maidsafe.dht.protobuf.Contact sender = 1;
inline bool FindNodesRequest::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindNodesRequest::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindNodesRequest::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindNodesRequest::clear_sender() {
  if (sender_ != NULL) sender_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_sender();
}
inline const ::maidsafe::dht::protobuf::Contact& FindNodesRequest::sender() const {
  return sender_ != NULL ? *sender_ : *default_instance_->sender_;
}
inline ::maidsafe::dht::protobuf::Contact* FindNodesRequest::mutable_sender() {
  set_has_sender();
  if (sender_ == NULL) sender_ = new ::maidsafe::dht::protobuf::Contact;
  return sender_;
}
inline ::maidsafe::dht::protobuf::Contact* FindNodesRequest::release_sender() {
  clear_has_sender();
  ::maidsafe::dht::protobuf::Contact* temp = sender_;
  sender_ = NULL;
  return temp;
}

// required bytes key = 2;
inline bool FindNodesRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FindNodesRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FindNodesRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FindNodesRequest::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& FindNodesRequest::key() const {
  return *key_;
}
inline void FindNodesRequest::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void FindNodesRequest::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void FindNodesRequest::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FindNodesRequest::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* FindNodesRequest::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 num_nodes_requested = 3;
inline bool FindNodesRequest::has_num_nodes_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FindNodesRequest::set_has_num_nodes_requested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FindNodesRequest::clear_has_num_nodes_requested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FindNodesRequest::clear_num_nodes_requested() {
  num_nodes_requested_ = 0;
  clear_has_num_nodes_requested();
}
inline ::google::protobuf::int32 FindNodesRequest::num_nodes_requested() const {
  return num_nodes_requested_;
}
inline void FindNodesRequest::set_num_nodes_requested(::google::protobuf::int32 value) {
  set_has_num_nodes_requested();
  num_nodes_requested_ = value;
}

// -------------------------------------------------------------------

// FindNodesResponse

// required bool result = 1;
inline bool FindNodesResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FindNodesResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FindNodesResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FindNodesResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool FindNodesResponse::result() const {
  return result_;
}
inline void FindNodesResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
}

// repeated .maidsafe.dht.protobuf.Contact closest_nodes = 2;
inline int FindNodesResponse::closest_nodes_size() const {
  return closest_nodes_.size();
}
inline void FindNodesResponse::clear_closest_nodes() {
  closest_nodes_.Clear();
}
inline const ::maidsafe::dht::protobuf::Contact& FindNodesResponse::closest_nodes(int index) const {
  return closest_nodes_.Get(index);
}
inline ::maidsafe::dht::protobuf::Contact* FindNodesResponse::mutable_closest_nodes(int index) {
  return closest_nodes_.Mutable(index);
}
inline ::maidsafe::dht::protobuf::Contact* FindNodesResponse::add_closest_nodes() {
  return closest_nodes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact >&
FindNodesResponse::closest_nodes() const {
  return closest_nodes_;
}
inline ::google::protobuf::RepeatedPtrField< ::maidsafe::dht::protobuf::Contact >*
FindNodesResponse::mutable_closest_nodes() {
  return &closest_nodes_;
}

// -------------------------------------------------------------------

// StoreRequest

// required .maidsafe.dht.protobuf.Contact sender = 1;
inline bool StoreRequest::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreRequest::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreRequest::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreRequest::clear_sender() {
  if (sender_ != NULL) sender_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_sender();
}
inline const ::maidsafe::dht::protobuf::Contact& StoreRequest::sender() const {
  return sender_ != NULL ? *sender_ : *default_instance_->sender_;
}
inline ::maidsafe::dht::protobuf::Contact* StoreRequest::mutable_sender() {
  set_has_sender();
  if (sender_ == NULL) sender_ = new ::maidsafe::dht::protobuf::Contact;
  return sender_;
}
inline ::maidsafe::dht::protobuf::Contact* StoreRequest::release_sender() {
  clear_has_sender();
  ::maidsafe::dht::protobuf::Contact* temp = sender_;
  sender_ = NULL;
  return temp;
}

// required bytes key = 2;
inline bool StoreRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoreRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoreRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoreRequest::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& StoreRequest::key() const {
  return *key_;
}
inline void StoreRequest::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void StoreRequest::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void StoreRequest::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StoreRequest::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* StoreRequest::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .maidsafe.dht.protobuf.SignedValue signed_value = 3;
inline bool StoreRequest::has_signed_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoreRequest::set_has_signed_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoreRequest::clear_has_signed_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoreRequest::clear_signed_value() {
  if (signed_value_ != NULL) signed_value_->::maidsafe::dht::protobuf::SignedValue::Clear();
  clear_has_signed_value();
}
inline const ::maidsafe::dht::protobuf::SignedValue& StoreRequest::signed_value() const {
  return signed_value_ != NULL ? *signed_value_ : *default_instance_->signed_value_;
}
inline ::maidsafe::dht::protobuf::SignedValue* StoreRequest::mutable_signed_value() {
  set_has_signed_value();
  if (signed_value_ == NULL) signed_value_ = new ::maidsafe::dht::protobuf::SignedValue;
  return signed_value_;
}
inline ::maidsafe::dht::protobuf::SignedValue* StoreRequest::release_signed_value() {
  clear_has_signed_value();
  ::maidsafe::dht::protobuf::SignedValue* temp = signed_value_;
  signed_value_ = NULL;
  return temp;
}

// required int32 ttl = 4;
inline bool StoreRequest::has_ttl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoreRequest::set_has_ttl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoreRequest::clear_has_ttl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoreRequest::clear_ttl() {
  ttl_ = 0;
  clear_has_ttl();
}
inline ::google::protobuf::int32 StoreRequest::ttl() const {
  return ttl_;
}
inline void StoreRequest::set_ttl(::google::protobuf::int32 value) {
  set_has_ttl();
  ttl_ = value;
}

// -------------------------------------------------------------------

// StoreResponse

// required bool result = 1;
inline bool StoreResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool StoreResponse::result() const {
  return result_;
}
inline void StoreResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// StoreRefreshRequest

// required .maidsafe.dht.protobuf.Contact sender = 1;
inline bool StoreRefreshRequest::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreRefreshRequest::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreRefreshRequest::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreRefreshRequest::clear_sender() {
  if (sender_ != NULL) sender_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_sender();
}
inline const ::maidsafe::dht::protobuf::Contact& StoreRefreshRequest::sender() const {
  return sender_ != NULL ? *sender_ : *default_instance_->sender_;
}
inline ::maidsafe::dht::protobuf::Contact* StoreRefreshRequest::mutable_sender() {
  set_has_sender();
  if (sender_ == NULL) sender_ = new ::maidsafe::dht::protobuf::Contact;
  return sender_;
}
inline ::maidsafe::dht::protobuf::Contact* StoreRefreshRequest::release_sender() {
  clear_has_sender();
  ::maidsafe::dht::protobuf::Contact* temp = sender_;
  sender_ = NULL;
  return temp;
}

// optional bytes serialised_store_request = 2;
inline bool StoreRefreshRequest::has_serialised_store_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoreRefreshRequest::set_has_serialised_store_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoreRefreshRequest::clear_has_serialised_store_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoreRefreshRequest::clear_serialised_store_request() {
  if (serialised_store_request_ != &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_->clear();
  }
  clear_has_serialised_store_request();
}
inline const ::std::string& StoreRefreshRequest::serialised_store_request() const {
  return *serialised_store_request_;
}
inline void StoreRefreshRequest::set_serialised_store_request(const ::std::string& value) {
  set_has_serialised_store_request();
  if (serialised_store_request_ == &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_ = new ::std::string;
  }
  serialised_store_request_->assign(value);
}
inline void StoreRefreshRequest::set_serialised_store_request(const char* value) {
  set_has_serialised_store_request();
  if (serialised_store_request_ == &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_ = new ::std::string;
  }
  serialised_store_request_->assign(value);
}
inline void StoreRefreshRequest::set_serialised_store_request(const void* value, size_t size) {
  set_has_serialised_store_request();
  if (serialised_store_request_ == &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_ = new ::std::string;
  }
  serialised_store_request_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StoreRefreshRequest::mutable_serialised_store_request() {
  set_has_serialised_store_request();
  if (serialised_store_request_ == &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_ = new ::std::string;
  }
  return serialised_store_request_;
}
inline ::std::string* StoreRefreshRequest::release_serialised_store_request() {
  clear_has_serialised_store_request();
  if (serialised_store_request_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serialised_store_request_;
    serialised_store_request_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes serialised_store_request_signature = 3;
inline bool StoreRefreshRequest::has_serialised_store_request_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoreRefreshRequest::set_has_serialised_store_request_signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoreRefreshRequest::clear_has_serialised_store_request_signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoreRefreshRequest::clear_serialised_store_request_signature() {
  if (serialised_store_request_signature_ != &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_signature_->clear();
  }
  clear_has_serialised_store_request_signature();
}
inline const ::std::string& StoreRefreshRequest::serialised_store_request_signature() const {
  return *serialised_store_request_signature_;
}
inline void StoreRefreshRequest::set_serialised_store_request_signature(const ::std::string& value) {
  set_has_serialised_store_request_signature();
  if (serialised_store_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_signature_ = new ::std::string;
  }
  serialised_store_request_signature_->assign(value);
}
inline void StoreRefreshRequest::set_serialised_store_request_signature(const char* value) {
  set_has_serialised_store_request_signature();
  if (serialised_store_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_signature_ = new ::std::string;
  }
  serialised_store_request_signature_->assign(value);
}
inline void StoreRefreshRequest::set_serialised_store_request_signature(const void* value, size_t size) {
  set_has_serialised_store_request_signature();
  if (serialised_store_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_signature_ = new ::std::string;
  }
  serialised_store_request_signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StoreRefreshRequest::mutable_serialised_store_request_signature() {
  set_has_serialised_store_request_signature();
  if (serialised_store_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    serialised_store_request_signature_ = new ::std::string;
  }
  return serialised_store_request_signature_;
}
inline ::std::string* StoreRefreshRequest::release_serialised_store_request_signature() {
  clear_has_serialised_store_request_signature();
  if (serialised_store_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serialised_store_request_signature_;
    serialised_store_request_signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// StoreRefreshResponse

// required bool result = 1;
inline bool StoreRefreshResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreRefreshResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreRefreshResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreRefreshResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool StoreRefreshResponse::result() const {
  return result_;
}
inline void StoreRefreshResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// DeleteRequest

// required .maidsafe.dht.protobuf.Contact sender = 1;
inline bool DeleteRequest::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRequest::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRequest::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRequest::clear_sender() {
  if (sender_ != NULL) sender_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_sender();
}
inline const ::maidsafe::dht::protobuf::Contact& DeleteRequest::sender() const {
  return sender_ != NULL ? *sender_ : *default_instance_->sender_;
}
inline ::maidsafe::dht::protobuf::Contact* DeleteRequest::mutable_sender() {
  set_has_sender();
  if (sender_ == NULL) sender_ = new ::maidsafe::dht::protobuf::Contact;
  return sender_;
}
inline ::maidsafe::dht::protobuf::Contact* DeleteRequest::release_sender() {
  clear_has_sender();
  ::maidsafe::dht::protobuf::Contact* temp = sender_;
  sender_ = NULL;
  return temp;
}

// required bytes key = 2;
inline bool DeleteRequest::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteRequest::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteRequest::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteRequest::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& DeleteRequest::key() const {
  return *key_;
}
inline void DeleteRequest::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void DeleteRequest::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void DeleteRequest::set_key(const void* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeleteRequest::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* DeleteRequest::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .maidsafe.dht.protobuf.SignedValue signed_value = 3;
inline bool DeleteRequest::has_signed_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteRequest::set_has_signed_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteRequest::clear_has_signed_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteRequest::clear_signed_value() {
  if (signed_value_ != NULL) signed_value_->::maidsafe::dht::protobuf::SignedValue::Clear();
  clear_has_signed_value();
}
inline const ::maidsafe::dht::protobuf::SignedValue& DeleteRequest::signed_value() const {
  return signed_value_ != NULL ? *signed_value_ : *default_instance_->signed_value_;
}
inline ::maidsafe::dht::protobuf::SignedValue* DeleteRequest::mutable_signed_value() {
  set_has_signed_value();
  if (signed_value_ == NULL) signed_value_ = new ::maidsafe::dht::protobuf::SignedValue;
  return signed_value_;
}
inline ::maidsafe::dht::protobuf::SignedValue* DeleteRequest::release_signed_value() {
  clear_has_signed_value();
  ::maidsafe::dht::protobuf::SignedValue* temp = signed_value_;
  signed_value_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// DeleteResponse

// required bool result = 1;
inline bool DeleteResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool DeleteResponse::result() const {
  return result_;
}
inline void DeleteResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// DeleteRefreshRequest

// required .maidsafe.dht.protobuf.Contact sender = 1;
inline bool DeleteRefreshRequest::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRefreshRequest::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRefreshRequest::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRefreshRequest::clear_sender() {
  if (sender_ != NULL) sender_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_sender();
}
inline const ::maidsafe::dht::protobuf::Contact& DeleteRefreshRequest::sender() const {
  return sender_ != NULL ? *sender_ : *default_instance_->sender_;
}
inline ::maidsafe::dht::protobuf::Contact* DeleteRefreshRequest::mutable_sender() {
  set_has_sender();
  if (sender_ == NULL) sender_ = new ::maidsafe::dht::protobuf::Contact;
  return sender_;
}
inline ::maidsafe::dht::protobuf::Contact* DeleteRefreshRequest::release_sender() {
  clear_has_sender();
  ::maidsafe::dht::protobuf::Contact* temp = sender_;
  sender_ = NULL;
  return temp;
}

// optional bytes serialised_delete_request = 2;
inline bool DeleteRefreshRequest::has_serialised_delete_request() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteRefreshRequest::set_has_serialised_delete_request() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteRefreshRequest::clear_has_serialised_delete_request() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteRefreshRequest::clear_serialised_delete_request() {
  if (serialised_delete_request_ != &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_->clear();
  }
  clear_has_serialised_delete_request();
}
inline const ::std::string& DeleteRefreshRequest::serialised_delete_request() const {
  return *serialised_delete_request_;
}
inline void DeleteRefreshRequest::set_serialised_delete_request(const ::std::string& value) {
  set_has_serialised_delete_request();
  if (serialised_delete_request_ == &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_ = new ::std::string;
  }
  serialised_delete_request_->assign(value);
}
inline void DeleteRefreshRequest::set_serialised_delete_request(const char* value) {
  set_has_serialised_delete_request();
  if (serialised_delete_request_ == &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_ = new ::std::string;
  }
  serialised_delete_request_->assign(value);
}
inline void DeleteRefreshRequest::set_serialised_delete_request(const void* value, size_t size) {
  set_has_serialised_delete_request();
  if (serialised_delete_request_ == &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_ = new ::std::string;
  }
  serialised_delete_request_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeleteRefreshRequest::mutable_serialised_delete_request() {
  set_has_serialised_delete_request();
  if (serialised_delete_request_ == &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_ = new ::std::string;
  }
  return serialised_delete_request_;
}
inline ::std::string* DeleteRefreshRequest::release_serialised_delete_request() {
  clear_has_serialised_delete_request();
  if (serialised_delete_request_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serialised_delete_request_;
    serialised_delete_request_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bytes serialised_delete_request_signature = 3;
inline bool DeleteRefreshRequest::has_serialised_delete_request_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeleteRefreshRequest::set_has_serialised_delete_request_signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeleteRefreshRequest::clear_has_serialised_delete_request_signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeleteRefreshRequest::clear_serialised_delete_request_signature() {
  if (serialised_delete_request_signature_ != &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_signature_->clear();
  }
  clear_has_serialised_delete_request_signature();
}
inline const ::std::string& DeleteRefreshRequest::serialised_delete_request_signature() const {
  return *serialised_delete_request_signature_;
}
inline void DeleteRefreshRequest::set_serialised_delete_request_signature(const ::std::string& value) {
  set_has_serialised_delete_request_signature();
  if (serialised_delete_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_signature_ = new ::std::string;
  }
  serialised_delete_request_signature_->assign(value);
}
inline void DeleteRefreshRequest::set_serialised_delete_request_signature(const char* value) {
  set_has_serialised_delete_request_signature();
  if (serialised_delete_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_signature_ = new ::std::string;
  }
  serialised_delete_request_signature_->assign(value);
}
inline void DeleteRefreshRequest::set_serialised_delete_request_signature(const void* value, size_t size) {
  set_has_serialised_delete_request_signature();
  if (serialised_delete_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_signature_ = new ::std::string;
  }
  serialised_delete_request_signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DeleteRefreshRequest::mutable_serialised_delete_request_signature() {
  set_has_serialised_delete_request_signature();
  if (serialised_delete_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    serialised_delete_request_signature_ = new ::std::string;
  }
  return serialised_delete_request_signature_;
}
inline ::std::string* DeleteRefreshRequest::release_serialised_delete_request_signature() {
  clear_has_serialised_delete_request_signature();
  if (serialised_delete_request_signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serialised_delete_request_signature_;
    serialised_delete_request_signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// DeleteRefreshResponse

// required bool result = 1;
inline bool DeleteRefreshResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteRefreshResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteRefreshResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteRefreshResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool DeleteRefreshResponse::result() const {
  return result_;
}
inline void DeleteRefreshResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// DownlistNotification

// required .maidsafe.dht.protobuf.Contact sender = 1;
inline bool DownlistNotification::has_sender() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownlistNotification::set_has_sender() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownlistNotification::clear_has_sender() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownlistNotification::clear_sender() {
  if (sender_ != NULL) sender_->::maidsafe::dht::protobuf::Contact::Clear();
  clear_has_sender();
}
inline const ::maidsafe::dht::protobuf::Contact& DownlistNotification::sender() const {
  return sender_ != NULL ? *sender_ : *default_instance_->sender_;
}
inline ::maidsafe::dht::protobuf::Contact* DownlistNotification::mutable_sender() {
  set_has_sender();
  if (sender_ == NULL) sender_ = new ::maidsafe::dht::protobuf::Contact;
  return sender_;
}
inline ::maidsafe::dht::protobuf::Contact* DownlistNotification::release_sender() {
  clear_has_sender();
  ::maidsafe::dht::protobuf::Contact* temp = sender_;
  sender_ = NULL;
  return temp;
}

// repeated bytes node_ids = 2;
inline int DownlistNotification::node_ids_size() const {
  return node_ids_.size();
}
inline void DownlistNotification::clear_node_ids() {
  node_ids_.Clear();
}
inline const ::std::string& DownlistNotification::node_ids(int index) const {
  return node_ids_.Get(index);
}
inline ::std::string* DownlistNotification::mutable_node_ids(int index) {
  return node_ids_.Mutable(index);
}
inline void DownlistNotification::set_node_ids(int index, const ::std::string& value) {
  node_ids_.Mutable(index)->assign(value);
}
inline void DownlistNotification::set_node_ids(int index, const char* value) {
  node_ids_.Mutable(index)->assign(value);
}
inline void DownlistNotification::set_node_ids(int index, const void* value, size_t size) {
  node_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DownlistNotification::add_node_ids() {
  return node_ids_.Add();
}
inline void DownlistNotification::add_node_ids(const ::std::string& value) {
  node_ids_.Add()->assign(value);
}
inline void DownlistNotification::add_node_ids(const char* value) {
  node_ids_.Add()->assign(value);
}
inline void DownlistNotification::add_node_ids(const void* value, size_t size) {
  node_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DownlistNotification::node_ids() const {
  return node_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DownlistNotification::mutable_node_ids() {
  return &node_ids_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace dht
}  // namespace maidsafe

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_maidsafe_2fdht_2frpcs_2eproto__INCLUDED
